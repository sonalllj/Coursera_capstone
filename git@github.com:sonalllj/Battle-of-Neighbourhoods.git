{
    "nbformat_minor": 1, 
    "cells": [
        {
            "source": "# Coursera Capstone Project", 
            "cell_type": "markdown", 
            "metadata": {
                "collapsed": true
            }
        }, 
        {
            "source": "## The Battle Of Neighborhoods (Week 1)", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "This notebook contains-\n1. A description of the problem and a discussion of the background. \n2. A description of the data and how it will be used to solve the problem.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Contents", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "1.Introduction Section : \u2043 Discussion of the business problem and the interested audience in this project.\n\n2.Data Section:\n    \u2043 Description of the data that will be used to solve the problem and the sources.\n    \n3.Methodology section \u2043 Discussion and description of exploratory data analysis carried out, any inferential statistical testing performed, and if \n  any machine learnings were used establishing the strategy and purposes.\n\n4.Results section \u2043 Discussion of the results.\n\n5.Discussion section \u2043 Elaboration and discussion on any observations noted and any recommendations suggested based on the results.\n\n6.Conclusion section \u2043 Report Conclusion", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "## 1. Introduction Section", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Discussion of the business problem and the audience who would be interested in this project.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "I am an analyst residing in the city of Pune in the country India. The area I live in is a 2 minute ride from the airport, is a 5 minute walk from the largest mall in the city, has more than 7 bakeries in a 100 m sq radius, consists of 4 nigh clubs and many other amenities such as various international cuisine restaurants, cafes, park, gyms, shops and repair shops. I am currently working with a leading consulting firm. This firm has offered me an opportunity to work for a project in New York City for a period of 1 and a half year. Here I wish to compare the two cities and find myself a place to stay that could be as similar as the area I currently reside in. The apartment in Manhattan must meet the following demands", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "\u2022\t1 bedroom apartment.\n\n\u2022\tdesired location is near a metro station in the Manhattan area and within 1.0 mile (1.6 km) radius\n\n\u2022\tprice of rent not exceed $7,000 per month\n\n\u2022\ttop amenities in the selected neighborhood shall be similar to current residence\n\n\u2022\tdesirable to have venues such as coffee shops, restaurants Asian Thai, wine stores, gym and food shops\n\n\u2022\tas a reference, I have included a map of venues near current residence in Pune.\n", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Business Problem:", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "The challenge is to find a suitable apartment for rent in Manhattan NY that complies with the demands on location, price and venues. The data required to resolve this challenge is described in the following section 2, below.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Interested Audience", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "This project could be helpful to anyone who is moving to another country for work or for study. The same methodology can be applied in accordance to demands as applicable. This case is also applicable for anyone interested in exploring starting or locating a new business in any city. ", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "## 2. Data Section:", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Description of the Data", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "The following data is required to answer the issues of the problem:", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "* List of Boroughs and neighborhoods of Manhattan with their geodata (latitude and longitude)\n* List of Subway metro stations in Manhattan with their address location\n* List of apartments for rent in Manhattan area with their addresses and price\n* Preferably, a list of apartment for rent with additional information, such as price, address, area, # of beds, etc\n* Venues for each Manhattan neighborhood ( than can be clustered)\n* Venues for subway metro stations, as needed", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### How the data will be used to solve the problem", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "The data will be used as follows:", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "* Use Foursquare and geopy data to map top 10 venues for all Manhattan neighborhoods and clustered in groups ( as per Course LAB)\n* Use foursquare and geopy data to map the location of subway metro stations , separately and on top of the above clustered map in order to be able to identify the venues and ammenities near each metro station, or explore each subway location separately\n* Use Foursquare and geopy data to map the location of rental places, in some form, linked to the subway locations.\n  create a map that depicts, for instance, the average rental price per square ft, around a radious of 1.0 mile (1.6 km) around each subway station - or a similar metrics. I will be able to quickly point to the popups to know the relative price per subway area.\n* Addresses from rental locations will be converted to geodata( lat, long) using Geopy-distance and Nominatim.\n* Data will be searched in open data sources if available, from real estate sites if open to reading, libraries or other government agencies such as Metro New York MTA, etc.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "The procesing of these DATA will allow to answer the key questions to make a decision:\n\n* what is the cost of rent (per square ft) around a mile radius from each subway metro station?\n* what is the area of Manhattan with best rental pricing that meets criteria established?\n* What is the distance from work place ( Park Ave and 53 rd St) and the tentative future home?\n* What are the venues of the two best places to live? How the prices compare?\n* How venues distribute among Manhattan neighborhoods and around metro stations?\n* Are there tradeoffs between size and price and location?\n* Any other interesting statistical data findings of the real estate and overall data.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "## Importing the libraries", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 4, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "Solving environment: done\n\n## Package Plan ##\n\n  environment location: /opt/conda/envs/Python36\n\n  added / updated specs: \n    - folium=0.5.0\n\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    altair-3.1.0               |           py36_0         724 KB  conda-forge\n    ca-certificates-2019.6.16  |       hecc5488_0         145 KB  conda-forge\n    openssl-1.1.1c             |       h516909a_0         2.1 MB  conda-forge\n    vincent-0.4.4              |             py_1          28 KB  conda-forge\n    branca-0.3.1               |             py_0          25 KB  conda-forge\n    certifi-2019.6.16          |           py36_1         149 KB  conda-forge\n    folium-0.5.0               |             py_0          45 KB  conda-forge\n    ------------------------------------------------------------\n                                           Total:         3.2 MB\n\nThe following NEW packages will be INSTALLED:\n\n    altair:          3.1.0-py36_0      conda-forge\n    branca:          0.3.1-py_0        conda-forge\n    folium:          0.5.0-py_0        conda-forge\n    vincent:         0.4.4-py_1        conda-forge\n\nThe following packages will be UPDATED:\n\n    ca-certificates: 2019.5.15-0                   --> 2019.6.16-hecc5488_0 conda-forge\n    certifi:         2019.6.16-py36_0              --> 2019.6.16-py36_1     conda-forge\n\nThe following packages will be DOWNGRADED:\n\n    openssl:         1.1.1c-h7b6447c_1             --> 1.1.1c-h516909a_0    conda-forge\n\n\nDownloading and Extracting Packages\naltair-3.1.0         | 724 KB    | ##################################### | 100% \nca-certificates-2019 | 145 KB    | ##################################### | 100% \nopenssl-1.1.1c       | 2.1 MB    | ##################################### | 100% \nvincent-0.4.4        | 28 KB     | ##################################### | 100% \nbranca-0.3.1         | 25 KB     | ##################################### | 100% \ncertifi-2019.6.16    | 149 KB    | ##################################### | 100% \nfolium-0.5.0         | 45 KB     | ##################################### | 100% \nPreparing transaction: done\nVerifying transaction: done\nExecuting transaction: done\nLibraries imported.\n"
                }
            ], 
            "source": "import numpy as np # library to handle data in a vectorized manner\nimport time\nimport pandas as pd # library for data analsysis\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\nimport json # library to handle JSON files\nimport requests # library to handle requests\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\nimport folium # map rendering library\n\nprint('Libraries imported.')"
        }, 
        {
            "source": "### Reference of venues around current residence in Pune for comparison to Manhattan place", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 21, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stderr", 
                    "text": "/opt/conda/envs/Python36/lib/python3.6/site-packages/ipykernel/__main__.py:3: DeprecationWarning: Using Nominatim with the default \"geopy/1.18.1\" `user_agent` is strongly discouraged, as it violates Nominatim's ToS https://operations.osmfoundation.org/policies/nominatim/ and may possibly cause 403 and 429 HTTP errors. Please specify a custom `user_agent` with `Nominatim(user_agent=\"my-application\")` or by overriding the default `user_agent`: `geopy.geocoders.options.default_user_agent = \"my-application\"`. In geopy 2.0 this will become an exception.\n  app.launch_new_instance()\n"
                }, 
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "The geograpical coordinate of Pune home are 18.5677772, 73.9183559.\n"
                }
            ], 
            "source": "address = 'VimanNagar, Pune'\n\ngeolocator = Nominatim()\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of Pune home are {}, {}.'.format(latitude, longitude))"
        }, 
        {
            "execution_count": 13, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "neighborhood_latitude=18.5666\nneighborhood_longitude=73.9154"
        }, 
        {
            "execution_count": 7, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "CLIENT_ID = 'HZCARJUGNQ0BJ5OCUFV2S5KIBAKV4TI0ZOK4JQUQFFFZI0VT' # your Foursquare ID\nCLIENT_SECRET = 'TRXXZQBI0JDAGXDB1EFJOVJCLGNTSF5KMGOEC4P4GD5W3IIS' # your Foursquare Secret\nVERSION = '20180605' # Foursquare API version"
        }, 
        {
            "execution_count": 14, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 14, 
                    "metadata": {}, 
                    "data": {
                        "text/plain": "'https://api.foursquare.com/v2/venues/explore?&client_id=HZCARJUGNQ0BJ5OCUFV2S5KIBAKV4TI0ZOK4JQUQFFFZI0VT&client_secret=TRXXZQBI0JDAGXDB1EFJOVJCLGNTSF5KMGOEC4P4GD5W3IIS&v=20180605&ll=18.5666,73.9154&radius=500&limit=100'"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "LIMIT = 100 # limit of number of venues returned by Foursquare API\nradius = 500 # define radius\n\n# create URL\nurl = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n    CLIENT_ID, \n    CLIENT_SECRET, \n    VERSION, \n    neighborhood_latitude, \n    neighborhood_longitude, \n    radius, \n    LIMIT)\nurl # display URL"
        }, 
        {
            "execution_count": 15, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "results = requests.get(url).json()"
        }, 
        {
            "execution_count": 16, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "def get_category_type(row):\n    try:\n        categories_list = row['categories']\n    except:\n        categories_list = row['venue.categories']\n        \n    if len(categories_list) == 0:\n        return None\n    else:\n        return categories_list[0]['name']"
        }, 
        {
            "execution_count": 19, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 19, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>categories</th>\n      <th>lat</th>\n      <th>lng</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Perks 'N' Brews</td>\n      <td>Coffee Shop</td>\n      <td>18.567873</td>\n      <td>73.914766</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Natural Ice Cream</td>\n      <td>Ice Cream Shop</td>\n      <td>18.567612</td>\n      <td>73.917748</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Chopsticks Spice Malabar</td>\n      <td>Southern / Soul Food Restaurant</td>\n      <td>18.565245</td>\n      <td>73.913116</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Falahaar</td>\n      <td>Juice Bar</td>\n      <td>18.565390</td>\n      <td>73.918158</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Khalsa Dairy</td>\n      <td>Cheese Shop</td>\n      <td>18.565183</td>\n      <td>73.914468</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>PVR Cinemas</td>\n      <td>Multiplex</td>\n      <td>18.562506</td>\n      <td>73.916613</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Irani Cafe</td>\n      <td>Caf\u00e9</td>\n      <td>18.563905</td>\n      <td>73.915019</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Cafe Coffee Day</td>\n      <td>Coffee Shop</td>\n      <td>18.566079</td>\n      <td>73.918249</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Kaveri</td>\n      <td>Indian Restaurant</td>\n      <td>18.566443</td>\n      <td>73.918315</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Incognito - Restaurant, Bar And Cafe</td>\n      <td>American Restaurant</td>\n      <td>18.562864</td>\n      <td>73.916410</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Chopsticks</td>\n      <td>Indian Restaurant</td>\n      <td>18.565228</td>\n      <td>73.913179</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Atmosphere 6</td>\n      <td>Lounge</td>\n      <td>18.565483</td>\n      <td>73.913750</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Sambar</td>\n      <td>Breakfast Spot</td>\n      <td>18.563567</td>\n      <td>73.917934</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Where Else</td>\n      <td>Caf\u00e9</td>\n      <td>18.565311</td>\n      <td>73.913977</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Picantos Mexican Grill</td>\n      <td>Mexican Restaurant</td>\n      <td>18.565423</td>\n      <td>73.910978</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Himalaya Momos</td>\n      <td>Dumpling Restaurant</td>\n      <td>18.566085</td>\n      <td>73.910820</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Tea Villa Cafe</td>\n      <td>Caf\u00e9</td>\n      <td>18.562925</td>\n      <td>73.918076</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Starbucks</td>\n      <td>Coffee Shop</td>\n      <td>18.562580</td>\n      <td>73.916834</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Largo Pizzeria</td>\n      <td>Pizza Place</td>\n      <td>18.566287</td>\n      <td>73.919850</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Farmaish Restaurant and Lounge</td>\n      <td>Restaurant</td>\n      <td>18.567143</td>\n      <td>73.918985</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Cream Centre</td>\n      <td>Vegetarian / Vegan Restaurant</td>\n      <td>18.562635</td>\n      <td>73.916724</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Foodhall</td>\n      <td>Gourmet Shop</td>\n      <td>18.562399</td>\n      <td>73.916535</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Sujata Mastani</td>\n      <td>Dessert Shop</td>\n      <td>18.565400</td>\n      <td>73.915169</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Zara</td>\n      <td>Clothing Store</td>\n      <td>18.562420</td>\n      <td>73.916680</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Crazy Noodles</td>\n      <td>Chinese Restaurant</td>\n      <td>18.562483</td>\n      <td>73.916501</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Punjabi Dhaba</td>\n      <td>Indian Restaurant</td>\n      <td>18.565137</td>\n      <td>73.911484</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Cafe Milano</td>\n      <td>Caf\u00e9</td>\n      <td>18.565583</td>\n      <td>73.910943</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Cafe Coffee Day</td>\n      <td>Caf\u00e9</td>\n      <td>18.565018</td>\n      <td>73.911003</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Mogaa Paratha</td>\n      <td>Indian Restaurant</td>\n      <td>18.565143</td>\n      <td>73.911987</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "                                    name                       categories  \\\n0                        Perks 'N' Brews                      Coffee Shop   \n1                      Natural Ice Cream                   Ice Cream Shop   \n2               Chopsticks Spice Malabar  Southern / Soul Food Restaurant   \n3                               Falahaar                        Juice Bar   \n4                           Khalsa Dairy                      Cheese Shop   \n5                            PVR Cinemas                        Multiplex   \n6                             Irani Cafe                             Caf\u00e9   \n7                        Cafe Coffee Day                      Coffee Shop   \n8                                 Kaveri                Indian Restaurant   \n9   Incognito - Restaurant, Bar And Cafe              American Restaurant   \n10                            Chopsticks                Indian Restaurant   \n11                          Atmosphere 6                           Lounge   \n12                                Sambar                   Breakfast Spot   \n13                            Where Else                             Caf\u00e9   \n14                Picantos Mexican Grill               Mexican Restaurant   \n15                        Himalaya Momos              Dumpling Restaurant   \n16                        Tea Villa Cafe                             Caf\u00e9   \n17                             Starbucks                      Coffee Shop   \n18                        Largo Pizzeria                      Pizza Place   \n19        Farmaish Restaurant and Lounge                       Restaurant   \n20                          Cream Centre    Vegetarian / Vegan Restaurant   \n21                              Foodhall                     Gourmet Shop   \n22                        Sujata Mastani                     Dessert Shop   \n23                                  Zara                   Clothing Store   \n24                         Crazy Noodles               Chinese Restaurant   \n25                         Punjabi Dhaba                Indian Restaurant   \n26                           Cafe Milano                             Caf\u00e9   \n27                       Cafe Coffee Day                             Caf\u00e9   \n28                         Mogaa Paratha                Indian Restaurant   \n\n          lat        lng  \n0   18.567873  73.914766  \n1   18.567612  73.917748  \n2   18.565245  73.913116  \n3   18.565390  73.918158  \n4   18.565183  73.914468  \n5   18.562506  73.916613  \n6   18.563905  73.915019  \n7   18.566079  73.918249  \n8   18.566443  73.918315  \n9   18.562864  73.916410  \n10  18.565228  73.913179  \n11  18.565483  73.913750  \n12  18.563567  73.917934  \n13  18.565311  73.913977  \n14  18.565423  73.910978  \n15  18.566085  73.910820  \n16  18.562925  73.918076  \n17  18.562580  73.916834  \n18  18.566287  73.919850  \n19  18.567143  73.918985  \n20  18.562635  73.916724  \n21  18.562399  73.916535  \n22  18.565400  73.915169  \n23  18.562420  73.916680  \n24  18.562483  73.916501  \n25  18.565137  73.911484  \n26  18.565583  73.910943  \n27  18.565018  73.911003  \n28  18.565143  73.911987  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "venues = results['response']['groups'][0]['items']\n    \nSGnearby_venues = json_normalize(venues) # flatten JSON\n\n# filter columns\nfiltered_columns = ['venue.name', 'venue.categories', 'venue.location.lat', 'venue.location.lng']\nSGnearby_venues =SGnearby_venues.loc[:, filtered_columns]\n\n# filter the category for each row\nSGnearby_venues['venue.categories'] = SGnearby_venues.apply(get_category_type, axis=1)\n\n# clean columns\nSGnearby_venues.columns = [col.split(\".\")[-1] for col in SGnearby_venues.columns]\n\nSGnearby_venues\n"
        }, 
        {
            "source": "## Map of Pune with venues near residence place - for reference", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 22, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 22, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>", 
                        "text/plain": "<folium.folium.Map at 0x7f1408201a20>"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# create map of Pune place  using latitude and longitude values\nmap_sg = folium.Map(location=[latitude, longitude], zoom_start=20)\n\n# add markers to map\nfor lat, lng, label in zip(SGnearby_venues['lat'], SGnearby_venues['lng'], SGnearby_venues['name']):\n    label = folium.Popup(label, parse_html=True)\n    folium.RegularPolygonMarker(\n        [lat, lng],\n        number_of_sides=4,\n        radius=10,\n        popup=label,\n        color='blue',\n        fill_color='#0f0f0f',\n        fill_opacity=0.7,\n    ).add_to(map_sg)  \n    \nmap_sg"
        }, 
        {
            "source": "The week 2 assignment is in a different notebook named- Battle of Neighbourhoods week 2", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "### Thank You", 
            "cell_type": "markdown", 
            "metadata": {}
        }
    ], 
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.6", 
            "name": "python3", 
            "language": "python"
        }, 
        "language_info": {
            "mimetype": "text/x-python", 
            "nbconvert_exporter": "python", 
            "version": "3.6.8", 
            "name": "python", 
            "file_extension": ".py", 
            "pygments_lexer": "ipython3", 
            "codemirror_mode": {
                "version": 3, 
                "name": "ipython"
            }
        }
    }, 
    "nbformat": 4
}